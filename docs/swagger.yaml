basePath: /
definitions:
  models.BibleContentAPI:
    properties:
      books:
        items:
          $ref: '#/definitions/models.BibleContentBook'
        type: array
      version_code:
        type: string
      version_id:
        type: integer
      version_name:
        type: string
    type: object
  models.BibleContentBook:
    properties:
      abbreviation:
        type: string
      chapters:
        items:
          $ref: '#/definitions/models.BibleContentChapter'
        type: array
      id:
        type: integer
      name:
        type: string
      number:
        type: integer
    type: object
  models.BibleContentChapter:
    properties:
      id:
        type: integer
      number:
        type: integer
      verses:
        items:
          $ref: '#/definitions/models.BibleContentVerse'
        type: array
    type: object
  models.BibleContentVerse:
    properties:
      id:
        type: integer
      number:
        type: integer
      text:
        type: string
    type: object
  models.SearchRequest:
    properties:
      query:
        type: string
      top_k:
        type: integer
      version:
        type: string
    required:
    - query
    type: object
  models.SearchResponse:
    properties:
      duration:
        type: string
      error:
        type: string
      query:
        type: string
      results:
        items:
          $ref: '#/definitions/models.SearchResult'
        type: array
      total:
        type: integer
    type: object
  models.SearchResult:
    properties:
      book:
        type: integer
      chapter:
        type: integer
      rank:
        type: integer
      score:
        type: number
      text:
        type: string
      verse:
        type: integer
      version:
        type: string
    type: object
  models.VersionListItem:
    properties:
      code:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  server.ErrorResponse:
    properties:
      error:
        example: error message
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: rayselfs@alive.org.tw
    name: API Support
    url: https://github.com/your-repo
  description: This is a sample server for a Bible API system, powered by Gin and
    GORM.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Bible System API
  version: "1.0"
paths:
  /api/bible/v1/search:
    post:
      consumes:
      - application/json
      description: Use semantic search functionality to understand query meaning and
        return relevant verses
      parameters:
      - description: Search request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.SearchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Search results
          schema:
            $ref: '#/definitions/models.SearchResponse'
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "500":
          description: Search failed
          schema:
            $ref: '#/definitions/server.ErrorResponse'
      summary: Semantic search for Bible verses
      tags:
      - Bible
  /api/bible/v1/version/{version_id}:
    get:
      description: Get all books, chapters and verses content for the specified version
        ID
      parameters:
      - description: Version ID
        in: path
        name: version_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved Bible content
          schema:
            $ref: '#/definitions/models.BibleContentAPI'
        "400":
          description: Invalid input parameters
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/server.ErrorResponse'
      summary: Get complete Bible content
      tags:
      - Bible
  /api/bible/v1/versions:
    get:
      description: List all available Bible versions in the system
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved version list
          schema:
            items:
              $ref: '#/definitions/models.VersionListItem'
            type: array
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/server.ErrorResponse'
      summary: Get all Bible versions
      tags:
      - Bible
swagger: "2.0"
